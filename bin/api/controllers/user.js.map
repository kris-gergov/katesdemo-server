{"version":3,"sources":["../../../src/api/controllers/user.ts"],"sourcesContent":["import * as express from 'express';\r\n\r\nimport UserService from '@services/user';\r\nimport { writeJsonResponse } from '@utils/express';\r\n\r\nexport function auth(req: express.Request, res: express.Response, next: express.NextFunction): void {\r\n  const token = req.headers.authorization!;\r\n\r\n  UserService.auth(token)\r\n    .then(authResponse => {\r\n      if (!(authResponse as any).error) {\r\n        res.locals.auth = {\r\n          userId: (authResponse as { userId: string }).userId,\r\n        };\r\n        next();\r\n      } else {\r\n        writeJsonResponse(res, 401, authResponse);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      writeJsonResponse(res, 500, {\r\n        error: {\r\n          type: 'internal_server_error',\r\n          message: 'Internal Server Error',\r\n        },\r\n      });\r\n    });\r\n}\r\n"],"names":["auth","req","res","next","token","headers","authorization","UserService","then","authResponse","error","locals","userId","writeJsonResponse","catch","err","type","message"],"mappings":"AAAA;;;;QAKgBA,IAAI,GAAJA,IAAI;AAHI,IAAA,KAAgB,kCAAhB,kBAAgB,EAAA;AACN,IAAA,QAAgB,WAAhB,qBAAgB,CAAA;;;;;;AAE3C,SAASA,IAAI,CAACC,GAAoB,EAAEC,GAAqB,EAAEC,IAA0B,EAAQ;IAClG,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAO,CAACC,aAAa,AAAC,AAAC;IAEzCC,KAAW,QAAA,CAACP,IAAI,CAACI,KAAK,CAAC,CACpBI,IAAI,CAACC,CAAAA,YAAY,GAAI;QACpB,IAAI,CAAC,AAACA,YAAY,CAASC,KAAK,EAAE;YAChCR,GAAG,CAACS,MAAM,CAACX,IAAI,GAAG;gBAChBY,MAAM,EAAE,AAACH,YAAY,CAAwBG,MAAM;aACpD,CAAC;YACFT,IAAI,EAAE,CAAC;SACR,MAAM;YACLU,CAAAA,GAAAA,QAAiB,AAAwB,CAAA,kBAAxB,CAACX,GAAG,EAAE,GAAG,EAAEO,YAAY,CAAC,CAAC;SAC3C;KACF,CAAC,CACDK,KAAK,CAACC,CAAAA,GAAG,GAAI;QACZF,CAAAA,GAAAA,QAAiB,AAKf,CAAA,kBALe,CAACX,GAAG,EAAE,GAAG,EAAE;YAC1BQ,KAAK,EAAE;gBACLM,IAAI,EAAE,uBAAuB;gBAC7BC,OAAO,EAAE,uBAAuB;aACjC;SACF,CAAC,CAAC;KACJ,CAAC,CAAC;CACN"}